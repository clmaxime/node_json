import { products } from "../model/productModel.js";
import bodyParser from "body-parser";

export const getProducts = (req, res) => {
  res.render("shop", { products });
};

export const getProductById = (req, res) => {
  const id = parseInt(req.params.id, 10);
  console.log(id);
  if (isNaN(id)) {
    res.status(400).json({ message: "Id invalide" });
  }
  const product = products.find((product) => product.id === id);
  if (product) {
    res.render("productView", { product });
  } else {
    res.status(404).json({ message: "Produit introuvable" });
  }
};

export const createProduct = (request, response) => {
  const bodyContent = request.body;
  const id = products.length + 1;
  const newProduct = { id, ...bodyContent };
  console.log(newProduct);
  products.push(newProduct);
  response.status(201).json(newProduct);
};

export const udpateProduct = (request, response) => {
  const id = parseInt(request.params.id, 10);
  const bodyContent = request.body;
  const product = products.find((e) => e.id === id);
  if (product) {
    const updatedProduct = { ...product, ...bodyContent };
    const index = products.findIndex((e) => e.id === id);
    products[index] = updatedProduct;
    response.json(updatedProduct);
    console.log(products);
  } else {
    response.status(404).json({ message: "product not found" });
  }
};

export const deleteProduct = (request, response) => {
  let id = parseInt(request.params.id, 10);
  let product = products.find((product) => product.id === id);
  if (product) {
    let produits = products.filter((product) => product.id !== id);

    response.json(produits);
    response.status(204).end();
  } else {
    response.status(404).json({ message: "product not found" });
  }
};
